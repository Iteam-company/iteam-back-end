{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "My API",
		"description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
	},
	"host": "localhost:7777",
	"basePath": "/",
	"tags": [
		{
			"name": "User",
			"description": "Endpoints"
		}
	],
	"schemes": ["http", "https"],
	"components": {
		"schemas": {
			"SignInBody": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				}
			},
			"RegenerateTokensBody": {
				"type": "object",
				"properties": {
					"refreshToken": {
						"type": "string"
					}
				}
			},
			"RegenerateTokensResponse": {
				"type": "object",
				"properties": {
					"refreshToken": { "type": "string" },
					"accessToken": { "type": "string" }
				}
			},
			"User": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"surname": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"workType": {
						"type": "string"
					},
					"avatarUrl": {
						"type": "string"
					},
					"file": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"offerDay": {
						"type": "string"
					},
					"birthday": {
						"type": "string"
					},
					"expirience": {
						"type": "string"
					},
					"skills": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"addres": {
						"type": "string"
					},
					"city": {
						"type": "integer"
					},
					"team": {
						"type": "string"
					},
					"company": {
						"type": "string"
					},
					"salary": {
						"type": "string"
					},
					"links": {
						"type": "string"
					}
				}
			},
			"Project": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"iconUrl": {
						"type": "string"
					},
					"mainDevID": {
						"type": "string"
					},
					"history": {
						"type": "array"
					},
					"subDevsID": {
						"type": "string"
					},
					"technologies": {
						"type": "string"
					},
					"startTime": {
						"type": "string"
					},
					"endTime": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"Application": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"fullName": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"isApproved": {
						"type": "boolean"
					}
				}
			},
			"Technology": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string"
					},
					"ico": {
						"type": "string"
					}
				}
			}
		}
	},
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "api_key",
			"in": "header"
		},
		"petstore_auth": {
			"type": "oauth2",
			"authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
			"flow": "implicit",
			"scopes": {
				"read_pets": "read your pets",
				"write_pets": "modify pets in your account"
			}
		}
	},
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"paths": {
		"/auth/signIn": {
			"post": {
				"tags": ["auth"],
				"description": "Log in for user",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "auth data",
						"in": "body",
						"schema": { "$ref": "#/components/schemas/SignInBody" }
					}
				],
				"responses": {
					"200": {
						"description": "Returns user object",
						"schema": {
							"$ref": "#/components/schemas/User"
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			}
		},

		"/auth/signUp": {
			"post": {
				"tags": ["auth"],
				"description": "Registering user to application",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "User data",
						"in": "body",
						"schema": { "$ref": "#/components/schemas/User" }
					}
				],
				"responses": {
					"200": {
						"description": "Returns user object",
						"schema": {
							"$ref": "#/components/schemas/User"
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			}
		},

		"/auth/regenerateTokens": {
			"post": {
				"tags": ["auth"],
				"produces": ["application/json"],
				"description": "Replacing outdated user tokens with a new ones",
				"parameters": [
					{
						"name": "refresh token",
						"in": "body",
						"schema": {
							"$ref": "#/components/schemas/RegenerateTokensBody"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns tokens object",
						"schema": {
							"$ref": "#/components/schemas/RegenerateTokensResponse"
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			}
		},

		"/user": {
			"get": {
				"tags": ["user"],
				"produces": ["application/json"],
				"description": "Getting all users",
				"responses": {
					"200": {
						"description": "Returns tokens object",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			},
			"post": {
				"tags": ["user"],
				"produces": ["application/json"],
				"description": "Creating new user",
				"parameters": [
					{
						"name": "User data",
						"in": "body",
						"schema": {
							"$ref": "#/components/schemas/User"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns tokens object",
						"schema": {
							"$ref": "#/components/schemas/User"
						}
					},
					"500": { "description": "Error" }
				}
			}
		},

		"user/{userID}": {
			"get": {
				"tags": ["user"],
				"produces": ["application/json"],
				"description": "Getting the user by id",
				"parameters": [
					{
						"name": "User id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns user by id",
						"schema": {
							"$ref": "#/components/schemas/User"
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			},
			"patch": {
				"tags": ["user"],
				"produces": ["application/json"],
				"description": "Modify user",
				"parameters": [
					{
						"name": "User id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns user by id",
						"schema": {
							"$ref": "#/components/schemas/User"
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			},
			"delete": {
				"tags": ["user"],
				"produces": ["application/json"],
				"description": "Delete user by id",
				"parameters": [
					{
						"name": "User id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns deleted user",
						"schema": {
							"$ref": "#/components/schemas/User"
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			}
		},

		"/project": {
			"get": {
				"tags": ["project"],
				"produces": ["application/json"],
				"description": "Getting all project",
				"responses": {
					"200": {
						"description": "Returns projects array",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/Project"
							}
						}
					},
					"500": { "description": "Error for bad auth" }
				}
			},
			"post": {
				"tags": ["project"],
				"produces": ["application/json"],
				"description": "Creating new project",
				"parameters": [
					{
						"name": "Project data",
						"in": "body",
						"schema": {
							"$ref": "#/components/schemas/Project"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns project object",
						"schema": {
							"$ref": "#/components/schemas/Project"
						}
					},
					"500": { "description": "Error" }
				}
			}
		},

		"project/{projectID}": {
			"get": {
				"tags": ["project"],
				"produces": ["application/json"],
				"description": "Getting the project by id",
				"parameters": [
					{
						"name": "Project id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns project by id",
						"schema": {
							"$ref": "#/components/schemas/Project"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"patch": {
				"tags": ["project"],
				"produces": ["application/json"],
				"description": "Modify project",
				"parameters": [
					{
						"name": "Project id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns project by id",
						"schema": {
							"$ref": "#/components/schemas/Project"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"delete": {
				"tags": ["project"],
				"produces": ["application/json"],
				"description": "Delete project by id",
				"parameters": [
					{
						"name": "Project id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns deleted project",
						"schema": {
							"$ref": "#/components/schemas/Project"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			}
		},

		"/application": {
			"get": {
				"tags": ["application"],
				"produces": ["application/json"],
				"description": "Getting all applications",
				"responses": {
					"200": {
						"description": "Returns applications array",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/Application"
							}
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"post": {
				"tags": ["application"],
				"produces": ["application/json"],
				"description": "Creating new application",
				"parameters": [
					{
						"name": "Application data",
						"in": "body",
						"schema": {
							"$ref": "#/components/schemas/Application"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns application object",
						"schema": {
							"$ref": "#/components/schemas/Application"
						}
					},
					"500": { "description": "Error" }
				}
			}
		},

		"application/{applicationID}": {
			"get": {
				"tags": ["application"],
				"produces": ["application/json"],
				"description": "Getting the application by id",
				"parameters": [
					{
						"name": "Application id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns application by id",
						"schema": {
							"$ref": "#/components/schemas/Application"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"patch": {
				"tags": ["application"],
				"produces": ["application/json"],
				"description": "Modify application",
				"parameters": [
					{
						"name": "Application id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns application by id",
						"schema": {
							"$ref": "#/components/schemas/Application"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"delete": {
				"tags": ["application"],
				"produces": ["application/json"],
				"description": "Delete application by id",
				"parameters": [
					{
						"name": "Project id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns deleted application",
						"schema": {
							"$ref": "#/components/schemas/Application"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			}
		},

		"/technology": {
			"get": {
				"tags": ["technology"],
				"produces": ["application/json"],
				"description": "Getting all technologies",
				"responses": {
					"200": {
						"description": "Returns technologies array",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/Technology"
							}
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"post": {
				"tags": ["technology"],
				"produces": ["application/json"],
				"description": "Creating new technology",
				"parameters": [
					{
						"name": "Application data",
						"in": "body",
						"schema": {
							"$ref": "#/components/schemas/Technology"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns technology object",
						"schema": {
							"$ref": "#/components/schemas/Technology"
						}
					},
					"500": { "description": "Error" }
				}
			}
		},

		"technology/{technologyID}": {
			"get": {
				"tags": ["technology"],
				"produces": ["application/json"],
				"description": "Getting the technology by id",
				"parameters": [
					{
						"name": "Technology id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns technology by id",
						"schema": {
							"$ref": "#/components/schemas/Technology"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"patch": {
				"tags": ["technology"],
				"produces": ["application/json"],
				"description": "Modify technology",
				"parameters": [
					{
						"name": "Technology id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns technology by id",
						"schema": {
							"$ref": "#/components/schemas/Technology"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			},
			"delete": {
				"tags": ["technology"],
				"produces": ["application/json"],
				"description": "Delete technology by id",
				"parameters": [
					{
						"name": "Technology id",
						"in": "params",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns deleted technology",
						"schema": {
							"$ref": "#/components/schemas/Technology"
						}
					},
					"500": { "description": "Error for bad data" }
				}
			}
		}
	}
}
